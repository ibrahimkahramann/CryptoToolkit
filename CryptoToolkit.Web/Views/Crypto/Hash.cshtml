@model dynamic
@{
    ViewData["Title"] = "SHA256 Özeti";
}

<div class="min-h-screen bg-[#111922] text-white px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold mb-2">SHA256 Özeti</h1>
            <p class="text-gray-400">Metin veya dosyalar için güvenilir özet oluşturun</p>
        </div>

        <div class="bg-[#1a2532] rounded-xl p-6 shadow-xl">
            <!-- Form Header -->
            <div class="flex items-center mb-6 pb-4 border-b border-gray-700">
                <div class="w-12 h-12 bg-orange-500 rounded-lg flex items-center justify-center mr-4">
                    <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8.39 12.648a1.32 1.32 0 0 0-.015.18c0 .305.21.508.5.508.266 0 .492-.172.555-.477l.554-2.703h1.204c.421 0 .617-.234.617-.547 0-.312-.188-.53-.617-.53h-.985l.516-2.524h1.265c.43 0 .618-.227.618-.547 0-.313-.188-.524-.618-.524h-1.046l.476-2.304a1.06 1.06 0 0 0 .016-.164.51.51 0 0 0-.516-.516.54.54 0 0 0-.539.43l-.523 2.554H7.617l.477-2.304c.008-.04.015-.118.015-.164a.512.512 0 0 0-.523-.516.539.539 0 0 0-.531.43L6.53 5.484H5.414c-.43 0-.617.22-.617.532 0 .312.187.539.617.539h.906l-.515 2.523H4.609c-.421 0-.609.219-.609.531 0 .313.188.547.61.547h.976l-.516 2.492c-.008.04-.015.125-.015.18 0 .305.21.508.5.508.265 0 .492-.172.554-.477l.555-2.703h2.242Zm-1-6.109h2.266l-.515 2.563H6.859l.532-2.563Z"/>
                    </svg>
                </div>
                <div>
                    <h2 class="text-xl font-semibold">SHA256 Özeti</h2>
                    <p class="text-gray-400">Veri bütünlüğünü doğrulayın</p>
                </div>
            </div>            @* <!-- Error Display -->
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="bg-red-500/10 border border-red-500 rounded-lg p-4 mb-6">
                    <ul class="list-disc list-inside text-red-400">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            } *@

            <form asp-action="Hash" method="post" enctype="multipart/form-data" class="space-y-6">
                <!-- Tab Navigation -->
                <div>
                    <div class="flex space-x-1 bg-[#243447] rounded-lg p-1 mb-6">
                        <button type="button" id="text-tab" onclick="switchTab('text')" 
                                class="flex-1 flex items-center justify-center px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200 bg-orange-600 text-white">
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M2.244 13.081a1 1 0 0 0 .78.19h2.49a1 1 0 0 0 .776-.39L12.387 6.5h1.374a.5.5 0 0 0 .416-.777L13.416 4.5l.761-1.223A.5.5 0 0 0 13.761 2.5H12.387L6.29.881a1 1 0 0 0-.776-.39H2.244a1 1 0 0 0-.78.19L.15 2.095A.5.5 0 0 0 .416 2.5h1.373L8.29 9.881a1 1 0 0 0 .776.39h2.49a1 1 0 0 0 .78-.19l1.314-1.314a.5.5 0 0 0-.285-.895H11.99l-6.097-6.38"/>
                            </svg>
                            Metin
                        </button>
                        <button type="button" id="file-tab" onclick="switchTab('file')" 
                                class="flex-1 flex items-center justify-center px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200 text-gray-400 hover:text-white">
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1H5z"/>
                                <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z"/>
                            </svg>
                            Dosya
                        </button>
                    </div>
                </div>

                <!-- Text Content -->
                <div id="text-content" class="space-y-4">
                    <div>
                        <label for="inputText" class="block text-sm font-medium text-gray-300 mb-2">Metin</label>
                        <div class="relative">
                            <textarea class="w-full bg-[#243447] border border-gray-600 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-orange-400 focus:outline-none resize-none" 
                                    id="inputText" name="inputText" rows="5" 
                                    placeholder="SHA256 özeti hesaplanacak metni buraya girin..."></textarea>
                        </div>
                        <p class="text-sm text-gray-400 mt-2">
                            <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                            </svg>
                            Metin girişi yaparken özel karakterler ve boşluklar da hesaba katılır
                        </p>
                    </div>
                </div>

                <!-- File Content -->
                <div id="file-content" class="space-y-4 hidden">
                    <div>
                        <label for="uploadedFile" class="block text-sm font-medium text-gray-300 mb-2">Dosya Seçin</label>
                        <div class="relative">
                            <input type="file" class="w-full bg-[#243447] border border-gray-600 rounded-lg px-4 py-3 text-white file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-orange-50 file:text-orange-700 hover:file:bg-orange-100 focus:border-orange-400 focus:outline-none" 
                                   id="uploadedFile" name="uploadedFile" />
                        </div>
                        <p class="text-sm text-gray-400 mt-2">
                            <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                            </svg>
                            Dosyanın tüm içeriği için SHA256 özeti hesaplanacak
                        </p>
                    </div>
                </div>                <!-- Action Buttons -->
                <div class="flex justify-between items-center pt-6">
                    <a asp-controller="Crypto" asp-action="Encrypt" class="inline-flex items-center px-4 py-2 border border-gray-600 rounded-lg text-gray-300 hover:text-white hover:border-gray-500 transition-colors duration-200">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                        </svg>
                        Şifreleme
                    </a>
                    <button type="submit" class="inline-flex items-center px-6 py-3 bg-orange-600 hover:bg-orange-700 text-white font-medium rounded-lg transition-colors duration-200">
                        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8.39 12.648a1.32 1.32 0 0 0-.015.18c0 .305.21.508.5.508.266 0 .492-.172.555-.477l.554-2.703h1.204c.421 0 .617-.234.617-.547 0-.312-.188-.53-.617-.53h-.985l.516-2.524h1.265c.43 0 .618-.227.618-.547 0-.313-.188-.524-.618-.524h-1.046l.476-2.304a1.06 1.06 0 0 0 .016-.164.51.51 0 0 0-.516-.516.54.54 0 0 0-.539.43l-.523 2.554H7.617l.477-2.304c.008-.04.015-.118.015-.164a.512.512 0 0 0-.523-.516.539.539 0 0 0-.531.43L6.53 5.484H5.414c-.43 0-.617.22-.617.532 0 .312.187.539.617.539h.906l-.515 2.523H4.609c-.421 0-.609.219-.609.531 0 .313.188.547.61.547h.976l-.516 2.492c-.008.04-.015.125-.015.18 0 .305.21.508.5.508.265 0 .492-.172.554-.477l.555-2.703h2.242Zm-1-6.109h2.266l-.515 2.563H6.859l.532-2.563Z"/>
                        </svg>
                        Özet Oluştur
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Result Modal -->
@if (Model != null && Model?.GetType()?.GetProperty("HashResult") != null)
{
    <div id="modal-backdrop" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
        <div id="result-modal" class="bg-[#1a2532] w-full max-w-4xl rounded-xl shadow-2xl">
            <!-- Modal Header -->
            <div class="bg-orange-600 px-6 py-4 flex items-center justify-between rounded-t-xl">
                <h3 class="text-lg font-medium text-white flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z"/>
                        <path d="M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z"/>
                    </svg>
                    SHA256 Özeti Oluşturuldu
                </h3>
                <button id="close-modal-btn" class="text-white hover:text-gray-300 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <!-- Modal Content -->
            <div class="p-6 text-white max-h-[calc(100vh-200px)] overflow-y-auto">
                <div class="mb-6">
                    <div class="flex items-center gap-2 mb-3 text-orange-400">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8.39 12.648a1.32 1.32 0 0 0-.015.18c0 .305.21.508.5.508.266 0 .492-.172.555-.477l.554-2.703h1.204c.421 0 .617-.234.617-.547 0-.312-.188-.53-.617-.53h-.985l.516-2.524h1.265c.43 0 .618-.227.618-.547 0-.313-.188-.524-.618-.524h-1.046l.476-2.304a1.06 1.06 0 0 0 .016-.164.51.51 0 0 0-.516-.516.54.54 0 0 0-.539.43l-.523 2.554H7.617l.477-2.304c.008-.04.015-.118.015-.164a.512.512 0 0 0-.523-.516.539.539 0 0 0-.531.43L6.53 5.484H5.414c-.43 0-.617.22-.617.532 0 .312.187.539.617.539h.906l-.515 2.523H4.609c-.421 0-.609.219-.609.531 0 .313.188.547.61.547h.976l-.516 2.492c-.008.04-.015.125-.015.18 0 .305.21.508.5.508.265 0 .492-.172.554-.477l.555-2.703h2.242Zm-1-6.109h2.266l-.515 2.563H6.859l.532-2.563Z"/>
                        </svg>
                        <h5 class="text-white font-medium">SHA256 Sonucu</h5>
                    </div>
                    <div class="relative bg-[#243447] p-4 rounded-lg border border-[#344b65]">
                        <pre class="text-orange-400 text-sm font-mono break-all">@Model?.HashResult</pre>
                        <button class="absolute top-2 right-2 bg-blue-600/90 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors flex items-center gap-1 copy-btn" 
                                data-text="@Model?.HashResult?.Replace("'", "\\'") ?? """>
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 256 256">
                                <path d="M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32ZM160,208H48V96H160Zm48-48H176V88a8,8,0,0,0-8-8H96V48H208Z"></path>
                            </svg>
                            Kopyala
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Modal Footer -->
            <div class="p-6 bg-[#243447] border-t border-[#344b65] flex items-center justify-end rounded-b-xl">
                <button type="button" id="close-modal-btn2" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 256 256">
                        <path d="M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z"></path>
                    </svg>
                    Kapat
                </button>
            </div>
        </div>
    </div>
}

<script>
    // Tab switching functionality
    function switchTab(tab) {
        const textTab = document.getElementById('text-tab');
        const fileTab = document.getElementById('file-tab');
        const textContent = document.getElementById('text-content');
        const fileContent = document.getElementById('file-content');

        if (tab === 'text') {
            textTab.classList.add('bg-orange-600', 'text-white');
            textTab.classList.remove('text-gray-400', 'hover:text-white');
            fileTab.classList.remove('bg-orange-600', 'text-white');
            fileTab.classList.add('text-gray-400', 'hover:text-white');
            
            textContent.classList.remove('hidden');
            fileContent.classList.add('hidden');
        } else {
            fileTab.classList.add('bg-orange-600', 'text-white');
            fileTab.classList.remove('text-gray-400', 'hover:text-white');
            textTab.classList.remove('bg-orange-600', 'text-white');
            textTab.classList.add('text-gray-400', 'hover:text-white');
            
            fileContent.classList.remove('hidden');
            textContent.classList.add('hidden');
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Add required attribute dynamically to prevent validation on hidden fields
        const form = document.querySelector('form[asp-action="Hash"]');
        const inputText = document.getElementById('inputText');
        const uploadedFile = document.getElementById('uploadedFile');

        // Set initial required state based on active tab
        if (document.getElementById('text-content').classList.contains('hidden')) {
            uploadedFile.required = true;
            inputText.required = false;
        } else {
            inputText.required = true;
            uploadedFile.required = false;
        }

        document.getElementById('text-tab').addEventListener('click', function() {
            inputText.required = true;
            uploadedFile.required = false;
        });

        document.getElementById('file-tab').addEventListener('click', function() {
            uploadedFile.required = true;
            inputText.required = false;
        });
        
        // Modal functionality
        const modalBackdrop = document.getElementById('modal-backdrop');
        
        if (modalBackdrop) {
            // Prevent scrolling on body when modal is open
            document.body.style.overflow = 'hidden';
            
            // Handle close buttons
            const closeButtons = document.querySelectorAll('#close-modal-btn, #close-modal-btn2');
            closeButtons.forEach(button => {
                button.addEventListener('click', closeModal);
            });
            
            // Close modal when clicking on backdrop
            modalBackdrop.addEventListener('click', function(e) {
                if (e.target === modalBackdrop) {
                    closeModal();
                }
            });
            
            // Close modal with Escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeModal();
                }
            });
        }
        
        // Handle copy buttons
        const copyButtons = document.querySelectorAll('.copy-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', function() {
                const text = this.dataset.text;
                if (!text) return;
                
                navigator.clipboard.writeText(text).then(() => {
                    const originalHTML = this.innerHTML;
                    const originalClass = this.className;
                    
                    // Change to copied state
                    this.innerHTML = `
                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 256 256">
                            <path d="M104,192a8.5,8.5,0,0,1-5.66-2.34l-56-56a8,8,0,0,1,11.32-11.32L104,172.69l98.34-98.35a8,8,0,0,1,11.32,11.32l-104,104A8.5,8.5,0,0,1,104,192Z"></path>
                        </svg>
                        Kopyalandı!
                    `;
                    this.className = this.className.replace(/bg-\w+-600\/90|bg-\w+-600/g, 'bg-green-600');
                    
                    // Restore original state after delay
                    setTimeout(() => {
                        this.innerHTML = originalHTML;
                        this.className = originalClass;
                    }, 2000);
                }).catch(err => {
                    console.error('Kopyalama hatası:', err);
                    alert('Kopyalama işlemi başarısız oldu.');
                });
            });
        });
    });
    
    // Function to close the modal
    function closeModal() {
        const modalBackdrop = document.getElementById('modal-backdrop');
        
        if (modalBackdrop) {
            // Hide the modal immediately
            modalBackdrop.style.display = 'none';
            
            // Restore scrolling on body
            document.body.style.overflow = 'auto';
        }
    }
</script>
